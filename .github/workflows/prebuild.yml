name: prebuild
on: [push]

jobs:
  package:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Use nodejs
        uses: actions/setup-node@v1
        with:
          node-version: 14.8.0

      - name: npm install
        run: npm install
        env:
          SKIP_PREBUILD_INSTALL: true

      - name: install Linux dependencies
        run: |
          sudo add-apt-repository ppa:jonathonf/ffmpeg-4
          sudo apt-get update
          sudo apt-get install libavcodec-dev libavformat-dev libavdevice-dev libavfilter-dev libavutil-dev libpostproc-dev libswresample-dev libswscale-dev
        if: ${{ runner.os == 'Linux' }}

      - name: install Mac dependencies (brew)
        run: brew install nasm pkg-config
        if: ${{ runner.os == 'macOS'}}

      - name: install Mac dependencies (shared release)
        run: node ./install_ffmpeg.js
        if: ${{ runner.os == 'macOS'}}

      - name: install Windows dependencies
        run: node ./install_ffmpeg.js
        if: ${{ runner.os == 'Windows'}}

      - name: prebuild for macOS (x64)
        run: npx prebuild --runtime napi --arch x64 --include-regex '(\.node|\.dylib|ffmpeg|ffprobe)$' --upload ${{ secrets.GITHUB_TOKEN }}
        if: ${{ runner.os == 'macOS'}}

#      - name: prebuild for macOS (arm64)
#        run: npx prebuild --runtime napi --arch arm64 --include-regex '(\.node|\.dylib|ffmpeg|ffprobe)$' --upload ${{ secrets.GITHUB_TOKEN }}
#        if: ${{ runner.os == 'macOS'}}

      - name: prebuild for Windows
        # I can't get the pipe character to work on windows, so to include both .node and .dll files I have this weird regexp
        run: npx prebuild --runtime napi --include-regex '\.[nd][ol][dl]e?$' --upload ${{ secrets.GITHUB_TOKEN }}
        if: ${{ runner.os == 'Windows'}}

      - name: prebuild for Linux
        run: npx prebuild --runtime napi --upload ${{ secrets.GITHUB_TOKEN }}
        if: ${{ runner.os == 'Linux'}}
